---
- name: Mayastor node configuration - clients and storage nodes
  hosts: mayastor_storage,mayastor_clients
  become: true

  vars:
    kernel_settings_sysctl:
      - name: vm.nr_hugepages
        value: 1024
    kernel_settings_sysfs:
      - name: /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
        value: 1024

    # Add required package names below
    deb_prerequisites:
      - open-iscsi
    rpm_prerequisites:
      - iscsi-initiator-utils

    # Add required kmod names below
    kmods:
      - nvme-core
      - nvme-tcp
      - nvmet

  tasks:
    - name: install RPM packages
      yum:
        name: "{{ rpm_prerequisites }}"
        state: present
      when: ansible_os_family == "RedHat"

    - name: install DEB packages
      block:
        - name: Upgrade all packages to the latest version
          apt:
            name: "*"
            state: latest
            force_apt_get: yes
            update_cache: yes

        - name: Install DEB packages
          apt:
            name: "{{ deb_prerequisites }}"
            state: present
            force_apt_get: yes
      when: ansible_os_family == "Debian"

    - name: enable and start the iscsid service
      service:
        name: iscsid
        enabled: yes
        state: started

    - name: create config file for nvme-multipath
      lineinfile:
        path: /etc/modprobe.d/nvme-multipath
        line: 'options nvme_core multipath=1'
        state: present
        create: yes
      register: nvme_mp_created
      when: ansible_os_family == "RedHat"

    - name: Reboot (because kmod reload doesn't usually work)
      reboot:
        reboot_timeout: 3600
      when: nvme_mp_created.changed

    - name: load the NVMe kmods
      modprobe:
        name: "{{ item }}"
        state: present
      loop: "{{ kmods }}"

    - name: Populate service facts
      service_facts:

    - name: restart kubelet
      service:
        name: kubelet
        state: restarted
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart k3s-node
      service:
        name: k3s-node
        state: restarted
      when: ansible_facts.services["k3s-node.service"] is defined

  roles:
    - linux-system-roles.kernel_settings












