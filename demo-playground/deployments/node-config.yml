---
- name: Mayastor node configuration - clients and storage nodes
  hosts: mayastor_storage,mayastor_clients
  become: true

  vars:
    nr_hugapages: 512
    # Add required package names below
    deb_prerequisites:
      - open-iscsi
      - cryptsetup
    rpm_prerequisites:
      - iscsi-initiator-utils
      - cryptsetup

    # Add required kmod names below
    kmods:
      - nvme-core
      - nvme-tcp
      - nvmet
      - nvme-fabrics
      - vfio-pci

    sysctl:
      - "net.core.rmem_max = 268435456"
      - "net.core.wmem_max = 268435456"
      - "net.ipv4.tcp_rmem = 4096 87380 134217728"
      - "net.ipv4.tcp_wmem = 4096 65536 134217728"
      - "net.core.optmem_max = 16777216"
      - "vm.nr_hugepages = {{ nr_hugepages }}"

    #iscsid is optional if nvmf mode or localPV mode are in use
    enable_iscsi: true

    reboot_nodes: true

  tasks:
    - name: Reboot (because kmod reload doesn't usually work)
      reboot:
        reboot_timeout: 3600

    - name: add 8.8.8.8 nameserver
      copy:
        dest: /etc/resolv.conf
        force: yes
        content: |
          nameserver 8.8.8.8
          search ec2.internal

    - name: set up sysctl
      lineinfile:
        path: /etc/sysctl.conf
        line: "{{ item }}"
        state: present
      loop: "{{ sysctl }}"

    - name: Set up hugepages
      shell: |
        echo "{{ nr_hugepages }}" | tee /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
        sysctl -p

    # - name: Upgrade all packages to the latest version
    #   apt:
    #     name: "*"
    #     state: latest
    #     force_apt_get: yes
    #     update_cache: yes
    #   when: ansible_os_family == "Debian"

    - name: Install and enable iSCSI
      block:
        - name: install RPM packages
          yum:
            name: "{{ rpm_prerequisites }}"
            state: present
          when: ansible_os_family == "RedHat"

        - name: install DEB packages
          block:
            - name: Install DEB packages
              apt:
                name: "{{ deb_prerequisites }}"
                state: present
                force_apt_get: yes
          when: ansible_os_family == "Debian"

        - name: enable and start the iscsid service
          service:
            name: iscsid
            enabled: yes
            state: started
      when: enable_iscsi|bool

    - name: install linux-modules-extra-$(uname -r)
      block:
        - name: get kernel version
          shell: |
            uname -r
          register: kernel_version

        - name: Install kernel modules extra
          apt:
            name: "linux-modules-extra-{{ kernel_version.stdout }}"
            state: present
            update_cache: yes
            cache_valid_time: 86400 #One day

        - name: persist nvme modules across reboots (DEB)
          lineinfile:
            path: "/etc/modules"
            line: "{{ item }}"
            state: present
          with_items: "{{ kmods }}"
      when: ansible_os_family == "Debian"

    - name: create config file for nvme-multipath
      lineinfile:
        path: /etc/modprobe.d/nvme-multipath
        line: 'options nvme_core multipath=1'
        state: present
        create: yes
      register: nvme_mp_created
      when: ansible_os_family == "RedHat"

    - name: load the NVMe kmods
      modprobe:
        name: "{{ item }}"
        state: present
      loop: "{{ kmods }}"

    - name: persist nvme modules across reboots (RHEL)
      lineinfile:
        path: " /etc/modules-load.d/mayastor-nvme.conf"
        line: "{{ item }}"
        state: present
        create: yes
      with_items: "{{ kmods }}"
      when: ansible_os_family == "RedHat"

    # - name: Reboot (because kmod reload doesn't usually work)
    #   reboot:
    #     reboot_timeout: 3600
    #   when: nvme_mp_created.changed or reboot_nodes|bool

    - name: Populate service facts
      service_facts:

    - name: add --node-status-update-frequency=5s to all nodes
      shell: |
        sudo grep 'node-status-update-frequency=5s' /var/lib/kubelet/kubeadm-flags.env && echo 0 || sudo sed -i "s/\(.\)\"$/\1 --node-status-update-frequency=5s\"/" /var/lib/kubelet/kubeadm-flags.env
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart kubelet
      service:
        name: kubelet
        state: restarted
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart k3s-node
      service:
        name: k3s-node
        state: restarted
      when: ansible_facts.services["k3s-node.service"] is defined

- name: Mayastor node configuration - master nodes
  hosts: kubemaster, kube-master, master
  become: true
  tasks:
    - name: Populate service facts
      service_facts:

    - name: update /etc/kubernetes/manifests/kube-controller-manager.yaml with node-monitor-period and node-monitor-grace-period
      lineinfile:
        path: /etc/kubernetes/manifests/kube-controller-manager.yaml
        line: "{{ item }}"
        insertafter: '    - --use-service-account-credentials=true'
      with_items:
        - '    - --node-monitor-grace-period=20s'
        - '    - --node-monitor-period=3s'
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart docker
      service:
        name: docker
        state: restarted
      when: ansible_facts.services["docker.service"] is defined
  
    - name: add --node-status-update-frequency=5s to all nodes
      shell: |
        sudo grep 'node-status-update-frequency=5s' /var/lib/kubelet/kubeadm-flags.env && echo 0 || sudo sed -i "s/\(.\)\"$/\1 --node-status-update-frequency=5s\"/" /var/lib/kubelet/kubeadm-flags.env
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart kubelet
      service:
        name: kubelet
        state: restarted
      when: ansible_facts.services["kubelet.service"] is defined

    - name: restart k3s-node
      service:
        name: k3s-node
        state: restarted
      when: ansible_facts.services["k3s-node.service"] is defined

