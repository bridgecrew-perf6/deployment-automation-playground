- name: configure sshuttle bastion host
  become: true
  hosts: bastion
  #gather_facts: false
  tasks:
    - set_fact:
        ansible_python_interpreter: "/usr/bin/python3"
      when: ansible_os_family == "RedHat"

    - name: Wait for bastion to become available
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      vars:
        ansible_connection: local
      
    - name: If python isn't available, install it'
      raw: yum -y install python3
      when: ansible_os_family == "RedHat"
    
    - name: ensure python3 is installed
      package:
        name: python3
        state: present

    - name: adjust MaxStartups
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^MaxStartups'
        line: 'MaxStartups 100:60:160'
        state: present

    - name: Update PermitRootLogin
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present

    - name: Update MaxSessions
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^MaxSessions'
        line: 'MaxSessions 100'
        state: present

    - name: Update PasswordAuthentication
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present

    - name: Update AllowAgentForwarding
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^AllowAgentForwarding'
        line: 'AllowAgentForwarding yes'
        state: present

    - name: Update AllowTcpForwarding
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^AllowTcpForwarding'
        line: 'AllowTcpForwarding yes'
        state: present

    - name: Update TCPKeepAlive
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^TCPKeepAlive'
        line: 'TCPKeepAlive yes'
        state: present

    - name: Update ClientAliveInterval
      lineinfile:
        create: yes
        path: /etc/ssh/sshd_config
        regexp: '^ClientAliveInterval'
        line: 'ClientAliveInterval 900'
        state: present

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: Wait for bastion to become available
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 5
      vars:
        ansible_connection: local

